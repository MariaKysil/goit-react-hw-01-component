{"version":3,"sources":["components/Profile/Profile.styled.js","components/Profile/Profile.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.styled.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.styled.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["ProfileContainer","styled","div","Description","Avatar","img","Name","p","Tag","Location","StatsList","ul","StatItem","li","Label","span","Quantity","Profile","name","tag","location","avatar","stats","followers","views","likes","src","alt","StatisticsSection","section","StatisticsList","StatisticsItem","color","i","Math","floor","random","Percentage","Statistics","title","className","map","id","label","percentage","FriendItem","Status","props","isOnline","FriendListItem","width","FriendsList","FriendList","friends","Table","table","Thread","thead","TableCell","th","TableItem","tr","elIndex","TransactionHistory","items","index","type","amount","currency","Container","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0548878.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n\n  max-width: 350px;\n\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n\n  text-align: center;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  padding-top: 35px;\n  padding-bottom: 35px;\n`;\n\nexport const Avatar = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  border: 1px solid #808080;\n\n  overflow: hidden;\n`;\n\nexport const Name = styled.p`\n  font-size: 26px;\n  font-weight: 600;\n`;\n\nexport const Tag = styled.p`\n  color: #808080;\n`;\n\nexport const Location = styled.p`\n  color: #808080;\n`;\n\nexport const StatsList = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n\n  background-color: #d4e6f1;\n  border-top: 1px solid #85929e;\n\n  text-align: center;\n`;\n\nexport const StatItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  width: 33%;\n`;\n\nexport const Label = styled.span`\n  margin-bottom: 10px;\n  font-size: 14px;\n`;\n\nexport const Quantity = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  color: 353535;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ProfileContainer,\n  Description,\n  Avatar,\n  Name,\n  Tag,\n  Location,\n  StatsList,\n  StatItem,\n  Label,\n  Quantity,\n} from './Profile.styled';\n\nconst Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) => {\n  return (\n    <ProfileContainer>\n      <Description>\n        <Avatar src={avatar} alt=\"user's avatar\" />\n        <Name>{name}</Name>\n        <Tag>@{tag}</Tag>\n        <Location>{location}</Location>\n      </Description>\n\n      <StatsList>\n        <StatItem>\n          <Label>Followers</Label>\n          <Quantity>{followers}</Quantity>\n        </StatItem>\n        <StatItem>\n          <Label>Views</Label>\n          <Quantity>{views}</Quantity>\n        </StatItem>\n        <StatItem>\n          <Label>Likes</Label>\n          <Quantity>{likes}</Quantity>\n        </StatItem>\n      </StatsList>\n    </ProfileContainer>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import styled from '@emotion/styled';\n\nexport const StatisticsSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-top: 50px;\n`;\n\nexport const StatisticsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport const StatisticsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n\n  padding: 15px;\n  width: 80px;\n\n  border: 1px solid #808080;\n  background-color: ${getRandomColor};\n`;\n\nexport const Label = styled.span`\n  font-weight: 600;\n`;\n\nexport const Percentage = styled.span`\n  margin-top: 5px;\n  font-size: 18px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StatisticsSection,\n  StatisticsList,\n  StatisticsItem,\n  Label,\n  Percentage,\n} from './Statistics.styled';\n\nconst Statistics = ({ stats, title }) => {\n  return (\n    <StatisticsSection>\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      <StatisticsList>\n        {stats.map(({ id, label, percentage }) => {\n          return (\n            <StatisticsItem key={id}>\n              <Label>{label}</Label>\n              <Percentage>{percentage}%</Percentage>\n            </StatisticsItem>\n          );\n        })}\n      </StatisticsList>\n    </StatisticsSection>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import styled from '@emotion/styled';\n\nexport const FriendItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  max-width: 350px;\n\n  margin-bottom: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  box-shadow: 2px 0px 3px 2px rgb(0 0 0 / 10%), 0px 2px 2px rgb(0 0 0 / 8%),\n    2px 2px 2px rgb(0 0 0 / 12%);\n`;\n\nexport const Status = styled.span`\n  width: 20px;\n  height: 20px;\n  background-color: ${props => {\n    return props.isOnline ? '#32CD32' : '#D22B2B';\n  }};\n  border-radius: 50%;\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n\n  margin-left: 20px;\n  width: 80px;\n  height: 80px;\n\n  border: 1px solid #4d4d4d;\n\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Name = styled.p`\n  margin-left: 15px;\n\n  font-size: 20px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { FriendItem, Status, Avatar, Name } from './FriendListItem.styled';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <FriendItem>\n      <Status isOnline={isOnline}>{isOnline}</Status>\n      <Avatar src={avatar} alt=\"\" width=\"48\" />\n      <Name>{name}</Name>\n    </FriendItem>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import styled from '@emotion/styled';\n\nexport const FriendsList = styled.ul`\n  margin-top: 50px;\n`;\n","import FriendListItem from 'components/FriendListItem/FriendListItem';\nimport { FriendsList } from './FriendList.styled';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <FriendsList>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <FriendListItem\n          key={id}\n          avatar={avatar}\n          name={name}\n          isOnline={isOnline}\n        />\n      ))}\n    </FriendsList>\n  );\n};\n\nexport default FriendList;\n","import styled from '@emotion/styled';\n\nexport const Table = styled.table`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 50px;\n  margin-bottom: 50px;\n\n  text-align: center;\n  width: 80%;\n\n  box-shadow: 2px 0px 3px 2px rgb(0 0 0 / 10%), 0px 2px 2px rgb(0 0 0 / 8%),\n    2px 2px 2px rgb(0 0 0 / 12%);\n`;\n\nexport const Thread = styled.thead`\n  background-color: #2980b9;\n  color: #fff;\n`;\n\nexport const TableCell = styled.th`\n  padding: 10px;\n`;\n\nexport const TableItem = styled.tr`\n  background-color: ${({ elIndex }) => {\n    return elIndex % 2 === 0 ? '#fff' : '#B6D0E2';\n  }};\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Table,\n  Thread,\n  TableCell,\n  TableItem,\n} from './TransactionHistory.styled';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <Table>\n      <Thread>\n        <tr>\n          <TableCell>Type</TableCell>\n          <TableCell>Amount</TableCell>\n          <TableCell>Currency</TableCell>\n        </tr>\n      </Thread>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }, index) => {\n          return (\n            <TableItem elIndex={index} key={id}>\n              <TableCell>{type}</TableCell>\n              <TableCell>{amount}</TableCell>\n              <TableCell>{currency}</TableCell>\n            </TableItem>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default TransactionHistory;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import Profile from '../Profile/Profile';\nimport user from '../../user.json';\nimport Statistics from '../Statistics/Statistics';\nimport statisticalData from '../../statistical-data.json';\nimport FriendList from '../FriendList/FriendList';\nimport friends from '../../friends.json';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport transactions from '../../transactions.json';\nimport { Container } from '../App/App.styled';\n\nexport default function App() {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}